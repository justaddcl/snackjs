type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  admin: Boolean!
  dietaryRestrictions: String
  favoriteSnack: String
  userRoles: [UserRole!]! @relation(name: "UserToUserRole", onDelete: CASCADE)
  leadsSmallGroups: [SmallGroup!]!
  leadsDiscipleshipCommunities: [DiscipleshipCommunity!]!
  resetToken: String
  resetTokenExpiry: Float
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserRole {
  id: ID! @id
  user: User! @relation(name: "UserToUserRole", onDelete: SET_NULL)
  type: UserRoleType!
  smallGroup: SmallGroup @relation(name: "SmallGroupToUserRole", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type SmallGroup {
  id: ID! @id
  leader: User!
  discipleshipCommunity: DiscipleshipCommunity
  members: [UserRole!]! @relation(name: "SmallGroupToUserRole", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type DiscipleshipCommunity {
  id: ID! @id
  pastor: User!
  night: DiscipleshipCommunityNight!
  smallGroups: [SmallGroup!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

""" TODO: add gatherable to event """
type Event {
  id: ID! @id
  type: EventType!
  name: String!
  description: String
  date: DateTime!
  startTime: DateTime
  endTime: DateTime
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum UserRoleType {
  ADMIN
  DISCIPLESHIP_COMMUNITY_PASTOR
  SMALL_GROUP_LEADER
  SMALL_GROUP_COORDINATOR
  DISCIPLESHIP_COMMUNITY_COORDINATOR
  SMALL_GROUP_MEMBER
}

enum DiscipleshipCommunityNight {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum EventType {
  SMALL_GROUP
  DISCIPLESHIP_COMMUNITY
  PARTY
  OTHER
}